

# En edition.
##
- EditerFicheResevationAction.java
------------------------------------
methode reset:
	- appel à la couche de persistance et à FicheReservationMapper:
			/**
			 * a supprimer
			LocalisationMapper localisationMapper = new LocalisationMapper();
			Set localisationsHibernate = ficheReservationHibernate
					.getCodeLocalisations();
			List localisations = new ArrayList();
			for (Iterator iter = localisationsHibernate.iterator(); iter
					.hasNext();) {
				HRefLocalisation localisationHibernate = (HRefLocalisation) iter
						.next();
				Localisation localisation = (Localisation) localisationMapper
						.BDDToMetier(localisationHibernate);
				localisations.add(localisation);
			}
			ficheReservation.setLocalisations(localisations);
			*/


			Dans le form
			------------
			/**
			 * A supprimer.
			List lieuxList = ficheReservation.getLocalisations();
			String lieux = "";
			for (Iterator iter = lieuxList.iterator(); iter.hasNext();) {
				Localisation lieu = (Localisation) iter.next();
				lieu = AdminFactory.getInstance().getLocalisation(lieu.getId());
				//récupération des visas
				Hibernate.initialize(lieu.getVisasComplementaires());
				List visas = lieu.getVisasComplementaires();				
				for (Iterator it = visas.iterator(); it.hasNext();) {					
					HUtilisateur husert = (HUtilisateur) it.next();
					Utilisateur user = AdminFactory.getInstance().getUtilisateur(husert.getNumsequtr());
					//vérification que l'utilisateur n'est pas deja présent dans le visas
					boolean present = false;
					for(Iterator iterator = visasCpl.iterator() ; iterator.hasNext();) {
						Option option = (Option) iterator.next();						
						//on a l'option, on vas vérifier si l'utilisateur est deja présent
						if (option.getValue().equals(user.getId().toString())) {
							//l'utilisateur est deja présent
							option.setText(option.getText() + ";lieu=" + lieu.getId().toString());
							present = true;
							break;
						}						
					} if (! present) {
						//aucuen option n'a été trouvée, on crée une nouvelle
						visasCpl.add(new Option(user.getId().toString(), "lieu=" + lieu.getId().toString()));
					}
				}
				lieux = lieux+lieu.getId().toString()+";";
			}
			this.setLieu(lieux);
			*/


# En sauvegarde.
##	

1- Modification de l'action
		/**
		 * a substituer par LieuGeo
		// Code supprimé: Lieu
		String lieuxAsString = editerFicheReservationForm
		.getLieu();
		StringTokenizer lieuxAsTok = new StringTokenizer(
				lieuxAsString, ";");
		List lieux = new ArrayList();
		while (lieuxAsTok.hasMoreTokens()) {
			String idLieuAsString = (String) lieuxAsTok
					.nextToken();
			Integer idLieu = Integer.valueOf(idLieuAsString);
			Localisation lieu = AdminFactory.getInstance().getLocalisation(idLieu);
			lieux.add(lieu);
		}
		ficheReservation.setLocalisations(lieux);
		*/

2- Modification de la couche hibernate: AdminFicheExploitation.saveOrUpdate();

		/**
		 * code à supprimer
		Set codeLocalisations = ficheReservationHibernate
		.getCodeLocalisations();
		if (codeLocalisations != null) {
			while (codeLocalisations.iterator().hasNext()) {
				HRefLocalisation codeLocalisation = (HRefLocalisation) codeLocalisations
						.iterator().next();
				codeLocalisations.remove(codeLocalisation);
			}
		} else {
			codeLocalisations = new HashSet();
		}
		
		sessionHibernate.flush();
		
		List localisations = ficheReservation.getLocalisations();
		for (Iterator iter = localisations.iterator(); iter.hasNext();) {
			Localisation localisation = (Localisation) iter.next();
		
			HRefLocalisation localisationHibernate = (HRefLocalisation) sessionHibernate
					.get(HRefLocalisation.class, localisation.getId());
			codeLocalisations.add(localisationHibernate);
		}
		ficheReservationHibernate.setCodeLocalisations(codeLocalisations);	
		*/	


# En Consultation
##

			DetailFicheAction getFicheReservation ():
			/**
			 * A supprimer: substituer par lieux geo
			List localisations = ficheReservation.getLocalisations();
			List localistationsBean = new ArrayList();
			for (Iterator iter = localisations.iterator(); iter.hasNext();) {
				Localisation localisation = (Localisation) iter.next();
				localistationsBean.add(localisation.getTitre());
			}
			ficheReservationBean.setLieu(localistationsBean);
			*/


# Jsp
##			

Ecran de consultation:
----------------------			
réservation2_1_detail.jsp			
			
- Modification de la jsp: exploitation3_1_detail.jsp
	<tr>
		<th><csi:Title 	key="formfiche.titre.lieu.geographique"/></th>
		<td>
	    <logic:iterate id="l" name="fiche" property="lieu">
				<bean:write name="l" /> <br>
			</logic:iterate>
		</td>
  </tr>
  
 
- Modification de la jsp d'édition:
-----------------------------------
réservation2_2_editer

    <tr>
		<th><csi:Title 	key="formfiche.titre.lieu.geographique" 
						mandatory="true" /></th>
		<td>
		<csi:SelectLieu size="6" 
						name="EditerFicheReservationForm" 
						property="lieu" 
						preAddJS="getVisasComplementaires('document.forms.EditerFicheReservationForm','lieuLieu','visasComplementaires','lieu')"
						preSuppJS="deleteVisasComplementaire('document.forms.EditerFicheReservationForm','lieu','visasComplementaires','lieu')"
						suppJS="deleteLieu"
						addJS="addLieu"
						/>
		<% //<csi:MultiSelectLieu size="8" 
			//					name="EditerFicheReservationForm" 
			//					property="lieu" 
			//					suppJS="supprimerLieu"
			//					addJS="ajouterLieu"
			//					/> 
			%>
		</td>
								
    </tr> 