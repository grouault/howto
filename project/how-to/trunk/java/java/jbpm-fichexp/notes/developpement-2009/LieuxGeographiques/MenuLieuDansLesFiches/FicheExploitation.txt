# Lieu dans FicheExploitation
#############################

Structure:
----------
- Création de la table d'association: FICHE_LIEU_EXP
- Création des bean:
				HFicheExpLieu.java
				HFicheExpLieuP.java
- Création du fichier de mapping:
				HFicheExpLieu.hbm
				
				
Mise à jour des objets:
-----------------------
HFicheExploitation: 
		private java.util.Set codeLocalisations;
		--> private java.util.Set lieuxGeo;
		
FicheExploitation hérite de FicheNuisible qui hérite de Fiche:
		private List localisations;
		--> private List lieux;
		
Form: EditerFicheExploitationForm:
		String lieu;
		--> private String lieuxGeo;
		
		
Mise à jour du mapping:
-----------------------
HFicheExploitaion.hbm		


Mettre en place le taglib
-------------------------

		
EditerFicheExploitationAction
----------------------------
id de la fiche --> remplissage du form	
--> jsp: exploitation3_2_editer.jsp

	1- Mise à jour de l'objet hibernate.
			--> AdminFicheExploitation.getFicheExploitationById(...);
			LieuMapper lieuMapper = new LieuMapper();
			Set lieuGeoHibernate = ficheExploitationHibernate.getLieuxGeo();
			List lieuGeoMetier = new ArrayList();
			for (Iterator iterator = lieuGeoHibernate.iterator(); iterator
					.hasNext();) {
				HRefLieu lieuHibernate = (HRefLieu) iterator.next();
				lieuGeoMetier.add(lieuMapper.BDDToMetier(lieuHibernate));
			}
			ficheExploitation.setLieux(lieuGeoMetier);
			
	
	2- Mise à jour de l'objet métier à partir de l'objet hibernate.
		 FicheExploitation ficheExploitation = AdminFactory.getInstance().getFicheExploitationById(this.getId());
		 

	3- Mise à jou du form à partir de l'objet métier.
			
			List lieuxGeo = ficheExploitation.getLieux();
			String strLieux = "";
			if (lieuxGeo!=null && !lieuxGeo.isEmpty()){
				for (Iterator iterator = lieuxGeo.iterator(); iterator
						.hasNext();) {
					RefLieu lieuMetier = (RefLieu) iterator.next();
					//récupération des visas associés au lieu.
					lieuMetier = AdminFactory.getInstance().getLieu(lieuMetier.getIdLieu());
					Hibernate.initialize(lieuMetier.getVisasComplementaires());
					List visas = lieuMetier.getVisasComplementaires();
					if (visas!=null && !(visas.isEmpty())) {
						for (Iterator iterator2 = visas.iterator(); iterator2
								.hasNext();) {
							HUtilisateur huser = (HUtilisateur) iterator2.next();
							Utilisateur user = AdminFactory.getInstance().getUtilisateur(huser.getNumsequtr());
							//vérification que l'utilisateur n'est pas deja présent dans le visas
							boolean present = false;
							for(Iterator iter = visasCpl.iterator() ; iter.hasNext();) {
								Option option = (Option) iter.next();						
								//on a l'option, on vas vérifier si l'utilisateur est deja présent
								if (option.getValue().equals(user.getId().toString())) {
									//l'utilisateur est deja présent
									option.setText(option.getText() + ";lieuGeo=" + lieuMetier.getIdLieu().toString());
									present = true;
									break;
								}						
							} if (! present) {
								//aucuen option n'a été trouvée, on crée une nouvelle
								visasCpl.add(new Option(user.getId().toString(), "lieuGeo=" + lieuMetier.getIdLieu().toString()));
							}	
						}
					}
					//pour mise à jour du champ lieu dans le form
					strLieux += lieuMetier.getIdLieu() + ";";
				}
			}
			this.setLieuGeo(strLieux);	
		
SauvegarderFicheExploitationAction: form --> bean metier
-------------------------------------------------------	
1- modification de FicheExploitation dans action:

		//evol 2009: mise à jour des lieuxGeo
		String strLieuxGeo = editerFicheExploitationForm.getLieuGeo();
		String[] tabLieuxGeo = strLieuxGeo.split(";");
		List lieuxGeo = new ArrayList();
		for (int i = 0; i < tabLieuxGeo.length; i++) {
			if(tabLieuxGeo[i]!=null && !("".equals(tabLieuxGeo[i]))){
				RefLieu lieuMetier = (RefLieu)AdminFactory.getInstance().getLieu(new Integer(tabLieuxGeo[i]));
				lieuxGeo.add(lieuMetier);
			}
		}
		ficheExploitation.setLieux(lieuxGeo);
		
2- modification de la couche hibernate.
		Set lieuxGeo = ficheExploitationHibernate.getLieuxGeo();
		if (lieuxGeo!=null) {
			//pas bon
			for (Iterator iterator = lieuxGeo.iterator(); iterator.hasNext();) {
				HRefLieu lieuHibernate = (HRefLieu) iterator.next();
				lieuxGeo.remove(lieuHibernate);
			}
		} else {
			lieuxGeo = new HashSet();
		}
		sessionHibernate.flush();
		
		List lieuxGeoMetier = ficheExploitation.getLieux();
		if (lieuxGeoMetier!=null && !lieuxGeoMetier.isEmpty()) {
			for (Iterator iterator = lieuxGeoMetier.iterator(); iterator
					.hasNext();) {
				RefLieu lieuMetier = (RefLieu) iterator.next();
				HRefLieu lieuHibernate = (HRefLieu)sessionHibernate.get(HRefLieu.class, lieuMetier.getIdLieu());
				lieuxGeo.add(lieuHibernate);
			}
		}
		ficheExploitationHibernate.setLieuxGeo(lieuxGeo);
		
		
		
##
# Mise à jour du formulaire en mode de consultation
#####################################################

DetailFicheExploitationAction extends DetailFicheAction

1- Dans DetailFicheAction.

	a: recuperation de l'id de la fiche à afficher.
			-> appel de l'element couche service pour charger l'élément à partir de la base de données.
				 et obtenir un élément métier.
					Appel de l'élement permettant de récupérer l'objet métier: AdminFactory.getFicheReservationById(Integer id);
							--> AdminFicheReservation.getFicheReservation
									--> ficheToReturn = (FicheReservation) ficheReservationMapper
										.BDDToMetier(ficheHibernate, false, sessionHibernate);					 
				 
	b: recupération de l'élement métier et mise à jour du bean de présentation.
			// Mise à jour de la liste des libellés.
			List lieuxGeo = ficheExploitation.getLieux();
			List libelleLieuxGeo = new ArrayList();
			if (lieuxGeo!=null && !lieuxGeo.isEmpty()) {
				for (Iterator iterator = lieuxGeo.iterator(); iterator
						.hasNext();) {
					RefLieu lieuMetier = (RefLieu) iterator.next();
					libelleLieuxGeo.add(lieuMetier.getLibelleLieu());
				}
			}
			ficheExploitationBean.setLieu(libelleLieuxGeo);
	
	

2- Mise à jour de la vue:
		<tr>
			<th><csi:Title key="formfiche.titre.lieu.geographique" /></th>
			<td><logic:iterate id="l" name="fiche" property="lieuxGeo">
				<bean:write name="l" />
				<br>
			</logic:iterate></td>
		</tr>